version: "3.9"

services:
  core_service:
    container_name: url_shortener_core_service
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8088:8088"
    volumes:
      - ./backend/.env:/app/.env
    depends_on:
      - postgres_db
    entrypoint: ["/app/wait-for.sh", "postgres_db:5432", "--", "/app/start.sh"]
    command: ["/app/backend"]
    networks:
      - url_shortener

  auth_service:
    container_name: url_shortener_auth_service
    build:
      context: ./auth
      dockerfile: Dockerfile
    volumes:
      - ./auth:/app
    env_file: ./auth/.env
    restart: always
    ports:
      - 3333:3333
    depends_on:
      - postgres_db
    networks:
      - url_shortener

  postgres_db:
    container_name: url_shortener_postgres_db
    build:
      context: ./postgres
      dockerfile: Dockerfile
    env_file: ./postgres/.env
    ports:
      - 5432:5432
    volumes:
      - ./postgres/data:/var/lib/postgresql/data
    networks:
      - url_shortener
       
  # Service for the frontend
  web_app:
    container_name: url_shortener_web_app
    build:
      context: ./web-app
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    volumes:
      - "/app/node_modules"
      - ./web-app:/app
    tty: true
    depends_on:
      - core_service
      - auth_service
    networks:
      - url_shortener

networks:
  url_shortener:
volumes:
  data:
